---
- name: Install prerequisites for RedHat
  yum:
    name: gpg,epel-release
    state: present
  register: yum_prereq_result
  until: yum_prereq_result is success
  retries: 10
  delay: 2

- name: Install python prerequisites for RedHat
  yum:
    name: python36-pexpect
    state: present
  register: yum_prereq_result_py
  until: yum_prereq_result_py is success
  retries: 10
  delay: 2


- name: Setup repository key from keyserver
  rpm_key:
    key: "{{ opensips_rpm_key_url }}"
  register: yum_key_result
  until: yum_key_result is success
  retries: 10
  delay: 2

- name: Install openSIPS repository
  yum:
    name: '{{ repo | replace(" ", "") }}'
  vars:
    repo: >-
      {{ opensips_yum_repo }}/{{ opensips_version }}/
      {{ opensips_build }}/el/{{ ansible_distribution_major_version }}/
      {{ ansible_architecture }}
      {% if opensips_yum_release is defined %}
      /opensips-yum-{{ opensips_build }}-
      {{ opensips_version }}-{{ opensips_yum_release }}.el
      {{ ansible_distribution_major_version }}.noarch.rpm
      {% else %}
      /repository.rpm
      {% endif %}
  register: yum_repo_install_res
  until: yum_repo_install_res is success
  retries: 10
  delay: 2

- name: Install openSIPS-cli
  yum:
    name: opensips-cli
  register: yum_cli_install_res
  until: yum_cli_install_res is success
  retries: 10
  delay: 2
- name: Create database user with name 'opensips' and password 'opensipsrw' with all database privileges
  community.mysql.mysql_user:
    name: opensips
    login_unix_socket: /var/lib/mysql/mysql.sock
#    login_user: "{{ opensips_cp_db_user }}"
#    login_password: "{{ opensips_cp_db_pass }}"
    password: opensipsrw
    priv: 'opensips.*:ALL'
    state: present
  when: ansible_os_family == "RedHat"


- name: Create database user with name 'opensips' and password 'opensipsrw' with all database privileges
  community.mysql.mysql_user:
    name: opensips
    login_unix_socket: /var/run/mysqld/mysqld.sock
#    login_user: "{{ opensips_cp_db_user }}"
#    login_password: "{{ opensips_cp_db_pass }}"
    password: opensipsrw
    priv: 'opensips.*:ALL'
    state: present
  when: ansible_os_family == "Debian"

- name: Create Database for opensips
  vars:
    ansible_python_interpreter: /usr/bin/python3
  expect:
    command: /bin/bash -c "opensips-cli -x database create opensips"
    responses:
      (?i)Password: "\n"
